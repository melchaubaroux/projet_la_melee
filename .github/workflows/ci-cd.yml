name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      ApiDb_changed: ${{ steps.ApiDb.outputs.changed }}
      ApiWhisper_changed: ${{ steps.ApiWhisper.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changes for ApiDb
        id: ApiDb
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^ApiDb/'; then
            echo "ApiDb changed."
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "ApiDb not changed."
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Detect changes for ApiWhisper
        id: ApiWhisper
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '^ApiWhisper/'; then
            echo "ApiWhisper changed."
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "ApiWhisper not changed."
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  test-ApiDb:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.ApiDb_changed == 'true' }}
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Plasma2020@
          POSTGRES_DB: suppliers  # ou ton nom de base de données spécifique
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready -U postgres" --health-timeout=30s --health-retries=5 --health-start-period=30s

    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      



      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip dependencies for ApiDb
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('ApiDb/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install testing dependencies
        run: |
          pip install pytest pytest-testmon

      - name: Install dependencies for ApiDb
        run: |
          python -m pip install --upgrade pip
          pip install -r ApiDb/requirements.txt

      - name: Run tests for ApiDb
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Plasma2020@
          POSTGRES_DB: suppliers
          POSTGRES_OPTIONS: "-c search_path=public"
          
        run: pytest --testmon ApiDb

  test-ApiWhisper:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.ApiWhisper_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip dependencies for ApiWhisper
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('ApiWhisper/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies for ApiWhisper
        run: |
          python -m pip install --upgrade pip
          pip install -r ApiWhisper/requirements.txt

      - name: Run tests for ApiWhisper
        run: pytest --testmon ApiWhisper
